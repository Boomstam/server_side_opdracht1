{"version":3,"sources":["utilities/localStorage.js","utilities/fetch.js","contexts/cardsContext.js","services/calculateCardTotal.js","data/messages.js","components/Hand.js","components/Hands.js","components/Controls.js","components/GameView.js","components/Game.js","components/GameCreator.js","App.js","reportWebVitals.js","index.js"],"names":["fromLocalStorage","JSON","parse","localStorage","getItem","toLocalStorage","deckID","setItem","stringify","fetchDeck","a","deckCount","fetch","response","json","data","id","deck_id","drawCards","cardCount","cards","GameContext","createContext","GameProvider","props","useState","deck","setDeck","hand","setHand","bankHand","setBankHand","gameFinished","setGameFinished","newDeck","useCallback","fetchNewDeck","bankCards","addCardsToHand","concat","addCardsToBankHand","stopGame","resetHands","api","useMemo","Provider","value","children","useCardsContext","useContext","tenners","cardValue","card","valChar","code","charAt","includes","parseInt","handValue","val","numAces","cardVal","i","Messages","Draw","Bust","Won","Lost","Tie","Pass","Blackjack","useStyles","makeStyles","text","fontSize","marginBottom","Hand","classes","isPlayer","Typography","className","map","component","alt","src","image","width","Hands","playerHand","Box","mt","button","backgroundColor","color","margin","Controls","handleDrawCard","pass","sx","display","textAlign","justifyContent","marginLeft","flexDirection","Button","onClick","root","height","GameView","message","m","Game","setMessage","playerTurn","setPlayerTurn","useEffect","updateGameState","handVal","bankHandVal","endGame","newDraw","bar","GameCreator","gameOn","setGameOn","ProvidedApp","Navbar","fixed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.107c2fa7.chunk.js","sourcesContent":["export function fromLocalStorage() {\n    return JSON.parse(localStorage.getItem(\"currentDeck\")) || [];\n}\n\nexport function toLocalStorage(deckID) {\n    localStorage.setItem(\"currentDeck\", JSON.stringify(deckID));\n}","import {fromLocalStorage} from \"./localStorage\";\n\nexport async function fetchDeck(deckCount = 1) {\n    const response = await fetch(`http://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=` + deckCount);\n    const data = await response.json();\n    return {\n        id: data.deck_id\n    }\n}\n\nexport async function drawCards(cardCount = 1) {\n    const deckID = fromLocalStorage();\n    const response = await fetch(`http://deckofcardsapi.com/api/deck/` + deckID +`/draw/?count=` + cardCount);\n    const data = await response.json();\n    return { cards: data.cards };\n}","import React, {createContext, useContext, useState, useMemo, useCallback} from 'react';\nimport {toLocalStorage} from \"../utilities/localStorage\";\nimport {drawCards, fetchDeck} from \"../utilities/fetch\";\n\nconst GameContext = createContext();\n\nexport function GameProvider(props) {\n    const [deck, setDeck] = useState([]);\n    const [hand, setHand] = useState([]);\n    const [bankHand, setBankHand] = useState([]);\n    const [gameFinished, setGameFinished] = useState(false);\n\n    const newDeck = useCallback(() => {\n        setHand([]);\n        setBankHand([]);\n        fetchNewDeck();\n        setGameFinished(false);\n    }, []);\n\n    async function fetchNewDeck(){\n        const deck = await fetchDeck(6);\n        setDeck(deck.id);\n        toLocalStorage(deck.id);\n        const cards = await drawCards(2);\n        setHand(cards.cards);\n        const bankCards = await drawCards(1);\n        setBankHand(bankCards.cards);\n    }\n\n    const addCardsToHand = useCallback((cards) => {\n        setHand(hand.concat(cards));\n    }, [hand, setHand]);\n\n    const addCardsToBankHand = useCallback((cards) => {\n        setBankHand(bankHand.concat(cards));\n    }, [bankHand, setBankHand]);\n\n    const stopGame = useCallback((cards) => {\n        setGameFinished(true);\n    }, [setGameFinished]);\n\n    const resetHands = useCallback(() => {\n        setHand([]);\n        setBankHand([]);\n    }, [setHand, setBankHand]);\n\n    const api = useMemo(\n        () => ({\n            deck,\n            hand,\n            bankHand,\n            addCardsToHand,\n            addCardsToBankHand,\n            newDeck,\n            resetHands,\n            gameFinished,\n            stopGame\n        }),\n        [\n            deck,\n            hand,\n            bankHand,\n            addCardsToHand,\n            addCardsToBankHand,\n            newDeck,\n            resetHands,\n            gameFinished,\n            stopGame\n        ]\n    );\n\n    return <GameContext.Provider value={api}>\n        {props.children}\n    </GameContext.Provider>\n}\n\n\nexport const useCardsContext = () => useContext(GameContext);","const tenners = ['0', 'J', 'Q', 'K'];\nconst aceThreshold = 10;\n\nfunction cardValue(card){\n    const valChar = card.code.charAt(0);\n    if(valChar === 'A') return 1;\n    if(tenners.includes(valChar)) return 10;\n    return parseInt(valChar);\n}\n\nexport function handValue(hand){\n    let val = 0;\n    let numAces = 0;\n    for(const card of hand){\n        let cardVal = cardValue(card);\n        if(cardVal === 1){\n            numAces++;\n        } else {\n            val += cardVal;\n        }\n    }\n    for(let i = 0; i < numAces; i++){\n        if(val > aceThreshold){\n            val += 1;\n        } else {\n            val += 11;\n        }\n    }\n    return val;\n}","const Messages = {\n    Draw: \"Draw a card or pass your turn to the bank!\",\n    Bust: \"Oh oh, busted! You've got more than 21...\",\n    Won: \"Congratulations, you beat the bank and won the game!\",\n    Lost: \"Unfortunately you lost this time. Better luck next time!\",\n    Tie: \"You tied with the bank, try again!\",\n    Pass: \"You pass your turn to the bank, draw cards for them until they reach 17.\",\n    Blackjack: \"You've go 21, woohoow! You win the game.\"\n}\n\nexport default Messages;","import Box from \"@mui/material/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n    text: {\n        fontSize: 20,\n        marginBottom: 5,\n    },\n});\n\nexport default function Hand(props){\n    const classes = useStyles();\n    const {isPlayer, cards} = props;\n    return <Box>\n        <Typography className={classes.text}>{isPlayer === true ? \"Player's Hand\" : \"Bank's Hand\"}</Typography>\n        {\n            cards.map(\n                (card, i) =>\n                    <Box\n                        key={card.image + \"_\" + i}\n                        component=\"img\"\n                        alt={card.code}\n                        src={card.image}\n                        width={100}\n                    />\n            )\n        }\n        </Box>\n}","import Box from \"@material-ui/core/Box\";\nimport Hand from \"./Hand\";\n\nexport function Hands(props) {\n    const {playerHand, bankHand} = props;\n    return <>\n        <Box mt={3}>\n            <Hand isPlayer={true} cards={playerHand}></Hand>\n        </Box>\n        <Box mt={3}>\n            <Hand isPlayer={false} cards={bankHand}></Hand>\n        </Box>\n    </>;\n}\n","import Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {handValue} from \"../services/calculateCardTotal\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n    text: {\n        fontSize: 24,\n    },\n    button: {\n        backgroundColor: \"white\",\n        color: \"#BEA543\",\n        margin: 10,\n    }\n});\n\nexport function Controls(props) {\n    const classes = useStyles();\n    const {hand, bankHand, handleDrawCard, pass} = props;\n    return <Box\n        sx={{display: \"flex\", textAlign: \"left\", justifyContent: \"space-evenly\", width: \"60%\", marginLeft: \"20%\"}}>\n        <Box sx={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\"}}>\n            <Typography className={classes.text}>{\"Player: \" + handValue(hand)}</Typography>\n            <Typography className={classes.text}>{\"Bank: \" + handValue(bankHand)}</Typography>\n        </Box>\n        <Box sx={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\"}}>\n            <Button onClick={handleDrawCard} className={classes.button}>Draw Card</Button>\n            <Button onClick={pass} className={classes.button}>Pass</Button>\n        </Box>\n    </Box>;\n}","import Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Hands} from \"./Hands\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Controls} from \"./Controls\";\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: \"#1A5E2B\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        color: \"#BEA543\",\n        height: \"100vh\",\n        textAlign: \"center\",\n        width: \"100vw\"\n    },\n    text: {\n        fontSize: 24,\n    },\n});\n\nexport function GameView(props) {\n    const classes = useStyles();\n    const {hand, bankHand, handleDrawCard, pass, message} = props;\n    return <Box className={classes.root}>\n            <Box sx={{width: \"100vw\"}}>\n            <Controls hand={hand} bankHand={bankHand} handleDrawCard={handleDrawCard} pass={pass}/>\n            <Box m={3}>\n                <Typography className={classes.text}>{message}</Typography>\n            </Box>\n            <Hands playerHand={hand} bankHand={bankHand}/>\n        </Box>\n    </Box>;\n}","import {useCardsContext} from \"../contexts/cardsContext\";\nimport {drawCards} from \"../utilities/fetch\";\nimport {handValue} from \"../services/calculateCardTotal\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport Messages from \"../data/messages\"\nimport {GameView} from \"./GameView\";\n\nexport function Game() {\n    const {hand, addCardsToHand, bankHand, addCardsToBankHand, gameFinished, stopGame} = useCardsContext();\n    const [message, setMessage] = useState([Messages.Draw]);\n    const [playerTurn, setPlayerTurn] = useState(true);\n\n    useEffect(() => {\n        if(gameFinished === false){\n            setMessage(Messages.Draw);\n        }\n    }, [gameFinished]);\n\n    const updateGameState = useCallback( () => {\n        const handVal = handValue(hand);\n        const bankHandVal = handValue(bankHand);\n        if (playerTurn) {\n            if (handVal > 21) {\n                setMessage(Messages.Bust);\n                endGame();\n            }\n            if (handVal === 21) {\n                setMessage(Messages.Blackjack);\n                endGame();\n            }\n        } else {\n            if (bankHandVal > 21) {\n                setMessage(Messages.Won);\n                endGame();\n            } else if (bankHandVal > 16) {\n                if (bankHandVal === handVal) {\n                    setMessage(Messages.Tie);\n                } else if (bankHandVal < handVal) {\n                    setMessage(Messages.Won);\n                } else if (bankHandVal > handVal) {\n                    setMessage(Messages.Lost);\n                }\n                endGame();\n            }\n        }\n\n        function endGame(){\n            stopGame();\n            setPlayerTurn(true);\n        }\n    }, [stopGame, bankHand, hand, playerTurn]);\n\n    useEffect(() => { updateGameState() }, [hand, bankHand, updateGameState]);\n\n    function handleDrawCard(){\n        newDraw();\n    }\n\n    async function newDraw(){\n        if(gameFinished === true) return;\n        const cards = await drawCards();\n        if(playerTurn === true) {\n            addCardsToHand(cards.cards);\n        } else {\n            addCardsToBankHand(cards.cards);\n        }\n    }\n\n    function pass(){\n        if(gameFinished === true) return;\n        setPlayerTurn(false);\n        setMessage(Messages.Pass);\n    }\n\n    return <GameView hand={hand} bankHand={bankHand}\n                     handleDrawCard={handleDrawCard} pass={pass} message={message}/>\n}","import {useCardsContext} from \"../contexts/cardsContext\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport {Game} from \"./Game\";\nimport {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n    bar: {\n        backgroundColor: \"#1A5E2B\",\n    },\n    button: {\n        fontSize:\"x-large\",\n        backgroundColor: \"#BEA543\",\n        color: \"white\",\n        margin: 20,\n    }\n});\n\nexport function GameCreator() {\n    const classes = useStyles();\n    const [gameOn, setGameOn] = useState(false);\n    const {newDeck, resetHands} = useCardsContext();\n\n    function handleClick(){\n        resetHands();\n        newDeck();\n        setGameOn(true);\n    }\n\n    function stopGame(){\n        setGameOn(false);\n    }\n\n    return <>\n        <Box className={classes.bar} sx={{display: \"flex\", justifyContent: \"center\"}}>\n            <Button className={classes.button} onClick={handleClick}>New Game</Button>\n            <Button className={classes.button} onClick={stopGame}>Stop Game</Button>\n        </Box>\n        {\n           gameOn === true ? <Game/> : null\n        }\n    </>\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'normalize.css';\nimport {GameProvider} from \"./contexts/cardsContext\";\nimport {GameCreator} from \"./components/GameCreator\";\nimport {Navbar} from \"react-bootstrap\";\n\n\nfunction ProvidedApp() {\n    return <>\n        <header>\n            <Navbar fixed=\"top\" className=\"p-0 shadow-sm\">\n            </Navbar>\n        </header>\n        <GameCreator/>\n    </>;\n}\n\nfunction App() {\n    return <GameProvider>\n        <ProvidedApp/>\n    </GameProvider>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}